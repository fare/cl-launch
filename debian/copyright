Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
Upstream-Name: cl-launch
Upstream-Contact: Francois-Rene Rideau <fare@tunes.org>
Source: http://www.cliki.net/cl-launch

Files: *
Copyright: 2005 Francois-Rene Rideau
License: LLGPL or Bugroff
 CL-Launch is written and Copyright (c) 2005 by Francois-Rene Rideau.
 .
 CL-Launch is available under the terms of the bugroff license.
	http://tunes.org/legalese/bugroff.html
 You may at your leisure use the LLGPL instead < http://www.cliki.net/LLGPL >
 .
 The LLGPL, or Lisp Lesser GNU Public, consists of a preamble (see below)
 and the GNU Lesser General Public License 2.1 (LGPL-2.1).
 Where these conflict, the preamble takes precedence.
 CL-Launch is referenced in the preamble as the "LIBRARY."
 .
  On Debian systems, the full text of the GNU LGPL v2.1 can be found in the file
 `/usr/share/common-licenses/LGPL-2.1'.
 .
 CL-Launch is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 .
 Preamble to the Gnu Lesser General Public License
 -------------------------------------------------
 Copyright (c) 2000 Franz Incorporated, Berkeley, CA 94704
 .
 The concept of the GNU Lesser General Public License version 2.1
 ("LGPL") has been adopted to govern the use and distribution of
 above-mentioned application. However, the LGPL uses terminology that
 is more appropriate for a program written in C than one written in
 Lisp. Nevertheless, the LGPL can still be applied to a Lisp program if
 certain clarifications are made. This document details those
 clarifications. Accordingly, the license for the open-source Lisp
 applications consists of this document plus the LGPL. Wherever there
 is a conflict between this document and the LGPL, this document takes
 precedence over the LGPL.
 .
 A "Library" in Lisp is a collection of Lisp functions, data and
 foreign modules. The form of the Library can be Lisp source code (for
 processing by an interpreter) or object code (usually the result of
 compilation of source code or built with some other
 mechanisms). Foreign modules are object code in a form that can be
 linked into a Lisp executable. When we speak of functions we do so in
 the most general way to include, in addition, methods and unnamed
 functions. Lisp "data" is also a general term that includes the data
 structures resulting from defining Lisp classes. A Lisp application
 may include the same set of Lisp objects as does a Library, but this
 does not mean that the application is necessarily a "work based on the
 Library" it contains.
 .
 The Library consists of everything in the distribution file set before
 any modifications are made to the files. If any of the functions or
 classes in the Library are redefined in other files, then those
 redefinitions ARE considered a work based on the Library. If
 additional methods are added to generic functions in the Library,
 those additional methods are NOT considered a work based on the
 Library. If Library classes are subclassed, these subclasses are NOT
 considered a work based on the Library. If the Library is modified to
 explicitly call other functions that are neither part of Lisp itself
 nor an available add-on module to Lisp, then the functions called by
 the modified Library ARE considered a work based on the Library. The
 goal is to ensure that the Library will compile and run without
 getting undefined function errors.
 .
 It is permitted to add proprietary source code to the Library, but it
 must be done in a way such that the Library will still run without
 that proprietary code present. Section 5 of the LGPL distinguishes
 between the case of a library being dynamically linked at runtime and
 one being statically linked at build time. Section 5 of the LGPL
 states that the former results in an executable that is a "work that
 uses the Library." Section 5 of the LGPL states that the latter
 results in one that is a "derivative of the Library", which is
 therefore covered by the LGPL. Since Lisp only offers one choice,
 which is to link the Library into an executable at build time, we
 declare that, for the purpose applying the LGPL to the Library, an
 executable that results from linking a "work that uses the Library"
 with the Library is considered a "work that uses the Library" and is
 therefore NOT covered by the LGPL.
 .
 Because of this declaration, section 6 of LGPL is not applicable to
 the Library. However, in connection with each distribution of this
 executable, you must also deliver, in accordance with the terms and
 conditions of the LGPL, the source code of Library (or your derivative
 thereof) that is incorporated into this executable.
 .
 .
 The "No problem Bugroff" license.
 ---------------------------------
 .
 Richard Stallman of the Free Software Foundation devised, in addition to
 some marvelous software, the GNU General Public License (GPL for short).
 Or the CopyLeft it is sometimes called.
 .
 It is quite a revolutionary document, using the "copyright" tool to to
 protect your right to use free software.
 .
 Unfortunately using copyright to protect free software is a lot like using
 a Jackal to guard the hens.
 .
 In fact, various inconveniences relating to this have resulted in
 modifications such as the LGPL (Library General Public License) and more
 recently the NPL (Netscape Public License)
 .
 I call these matters mere inconveniences, the real damage will occur when
 the Jackal's, (sorry, I mean lawyers), actually get to test the GPL in
 court for the first time.
 .
 Thus enter my version.
 .
 Its very simple.
 .
 Entirely consistent.
 .
 Completely unrestrictive.
 .
 Easy to apply.
 .
 The "No problem Bugroff" license is as follows...
 .
 The answer to any and every question relating to the copyright, patents,
 legal issues of Bugroff licensed software is....
 .
 *Sure, No problem. Don't worry, be happy. Now bugger off.*
 .
 All portions of this license are important..
 .
 * "Sure, no problem." Gives you complete freedom. I mean it. Utterly
   complete. A bit of a joke really. You have complete freedom anyway.
 .
 * "Don't worry, be happy." Apart from being good advice and a good song,
   it also says :- No matter what anyone else says or does, you still have
   complete freedom.
 .
 * Now bugger off. The only way to get rid of pushy Jackals is to ignore
   them and not feed them. The GPL is just begging somebody to take it to
   court. Can't you just see it. Exactly the same thing that happened when
   some twit (not Linus) registered Linux as his own personal trademark.
   People got upset, started a fund, and hired, off all ruddy things, a
   Jackal to try and defend the chicken! Who really benefits from this
   trademark / patent / copyright thing anyway? The lawyers. Who made it up
   in the first place? The lawyers.
 .
 OK so the last part of the license sounds a bit harsh, but seriously
 folks, if you are a :-
 .
 * Lawyer asking these legalese questions... You should go off and learn an
   honest trade that will actually contribute to life instead of draining
   it.
 .
 * Programmer asking these legalese questions... You have amazingly
   powerful tools in your hands and mind, use them to ask and answer the
   worthwhile questions of life, the universe and everything. Stop mucking
   about with such legal nonsense and get back to programming.
 .
 * User/reader asking these question... Don't worry. Go off and be happy.
   Have fun. Enjoy what has been created for you.
